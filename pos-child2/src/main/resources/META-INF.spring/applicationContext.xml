<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">
    <beans profile="LOC">
        <bean id="databaseProperties"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean"
              p:location="classpath:jdbcLOC.properties"/>    <!--manggil jdbcLOC-->
    </beans>
    <beans profile="repository">
        <context:property-placeholder properties-ref="databaseProperties" order="1" ignore-unresolvable="true"/>
        <jpa:repositories base-package="gan.cloud.co.id.repository.*"/>  <!--DAONYA-->
        <context:component-scan base-package="gan.cloud.co.id"/>
        <!-- BoneCP configuration -->
        <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
            <property name="driverClass" value="${jdbc.driver}"/>
            <property name="jdbcUrl" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="idleConnectionTestPeriodInSeconds"
                      value="${bonecp.idleConnectionTestPeriodInSeconds}"/>
            <property name="idleMaxAgeInSeconds"
                      value="${bonecp.idleMaxAgeInSeconds}"/>
            <property name="minConnectionsPerPartition"
                      value="${bonecp.minConnectionsPerPartition}"/>
            <property name="maxConnectionsPerPartition"
                      value="${bonecp.maxConnectionsPerPartition}"/>
            <property name="partitionCount" value="${bonecp.partitionCount}"/>
            <property name="acquireIncrement" value="${bonecp.acquireIncrement}"/>
            <property name="statementsCacheSize"
                      value="${bonecp.statementsCacheSize}"/>
            <property name="releaseHelperThreads"
                      value="${bonecp.releaseHelperThreads}"/>
            <property name="connectionTestStatement" value="SELECT 1"/>
            <property name="poolAvailabilityThreshold" value="${bonecp.poolAvailabilityThreshold}"/>
        </bean>
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource"/>
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManager"/>
        <bean id="entityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource">
            <property name="packagesToScan">
                <list>
                    <value>gan.cloud.co.id.models</value>  <!--mapping seluruh class pada package-->
                </list>
            </property>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                    <prop key="hibernate.show_sql">true</prop>
                    <prop key="hibernate.format_sql">false</prop>
                    <prop key="hibernate.hbm2ddl.auto">update</prop>
                    <prop key="hibernate.cache.use_query_cache">false</prop>
                    <prop key="hibernate.cache.use_second_level_cache">false</prop>
                </props>
            </property>
        </bean>
        <tx:annotation-driven/>
     <!--   <bean id="messageSource"
              class="org.springframework.context.support.ResourceBundleMessageSource">
            <property name="basenames">
                <list>
                    <value>messages</value>
                </list>
            </property>
        </bean>-->
    </beans>
</beans>